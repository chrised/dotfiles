#!/bin/sh
APPDIR="$(git rev-parse --show-toplevel)/apps/vscode"
HOSTTYPE="$(uname -s)"
CODE="$(which code)"
if [ -z "${CODE}" ] && [ "${HOSTTYPE}" = "Darwin" ]; then
    CODE="/Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/bin/code"
    if [ ! -f "${CODE}" ]; then
        CODE="/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code"
    fi
elif [ -z "${CODE}" ] && [ "${HOSTTYPE}" = "Linux" ]; then
    CODE="/usr/bin/code"
fi


# Abort if code doesn't exist
which "${CODE}" || exit 0

if [ "${CODE}" = "/Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/bin/code" ]; then
    CONFDIR="${HOME}/Library/Application Support/Code - Insiders/User"
elif [ "${CODE}" = "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code" ]; then
    CONFDIR="${HOME}/Library/Application Support/Code/User"
elif [ "${CODE}" = "/usr/bin/code" ]; then
    CONFDIR="${HOME}/.config/Code/User"
fi

[ ! -d "${CONFDIR}" ] && mkdir "${CONFDIR}"
SETTINGS_FILE="${CONFDIR}/settings.json"
KEYBINDINGS_FILE="${CONFDIR}/keybindings.json"

[ -f "${SETTINGS_FILE}" ] && mv "${SETTINGS_FILE}" "${SETTINGS_FILE}-old"
ln -s "${APPDIR}/settings.json" "${CONFDIR}/settings.json"
[ -f "${KEYBINDINGS_FILE}" ] && mv "${KEYBINDINGS_FILE}" "${KEYBINDINGS_FILE}-old"
ln -s "${APPDIR}/keybindings.json" "${CONFDIR}/keybindings.json"

while read -r extension; do
    code --install-extension "${extension}" --force
done < "${APPDIR}/extensions"
