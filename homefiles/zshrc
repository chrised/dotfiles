#!/usr/bin/env zsh
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Init ARM Homebrew if it's installed
# This must run before brew completion
if [ -f "/opt/homebrew/bin/brew" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Homebrew completion:
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.dotfiles/oh-my-zsh"
export ZSH_CUSTOM="${HOME}/.dotfiles/oh-my-zsh-custom"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

ZSH_THEME="powerlevel10k/powerlevel10k"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

if [[ -f "/opt/homebrew/share/chruby/chruby.sh" ]]; then
    source "/opt/homebrew/share/chruby/chruby.sh"
elif [[ -f "/usr/local/share/chruby/chruby.sh" ]]; then
    source "/usr/local/share/chruby/chruby.sh"
fi


# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    1password
    aliases
    ansible
    aws
    docker
    git
    git-auto-fetch
    git-escape-magic
    git-lfs
    git-prompt
    gitfast
    github
    gnu-utils
    golang
    helm
    history
    jsontools
    kubectl
    node
    npm
    pipenv
    poetry
    python
    rebar
    screen
    terraform
    tig
    vscode
)
if [ "$(uname -s)" = "Darwin" ]; then
    plugins+=(
        brew
        macos
        xcode
    )
    if [[ $TERM_PROGRAM != "WarpTerminal" ]]; then
        plugins+=(iterm2)
    fi
elif [ "$(uname -s)" = "Linux" ]; then
    plugins+=(
        lxd
        ubuntu
        archlinux

    )
fi

source $ZSH/oh-my-zsh.sh

# User configuration
test -e ${HOME}/.zshrc.local && source ${HOME}/.zshrc.local
setopt no_share_history
setopt noautomenu
setopt nomenucomplete
setopt extended_glob

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias poe="poetry poe"

# Add some paths
# Opt-bin
if [ -d "/opt/bin" ]; then
    export PATH="/opt/bin:${PATH}"
fi
# User-custom bin
if [ -d "${HOME}/bin" ]; then
    export PATH="${HOME}/bin:${PATH}"
fi
# Default Go bin
if [ -d "${HOME}/go/bin" ]; then
    export PATH="${HOME}/go/bin:${PATH}"
fi
# Default Haskell cabal bin
if [ -d "${HOME}/.cabal/bin" ]; then
    export PATH="${HOME}/.cabal/bin:${PATH}"
fi
# Default rebar3 bin
if [ -d "${HOME}/.cache/rebar3/bin" ]; then
    export PATH="${HOME}/.cache/rebar3/bin:${PATH}"
fi
# Default dotnet tools
if [ -d "${HOME}/.dotnet/tools" ]; then
    export PATH="${HOME}/.dotnet/tools:${PATH}"
fi
# Pip --user install location
if [ -d "${HOME}/.local/bin/" ]; then
    export PATH="${HOME}/.local/bin:${PATH}"
fi
# Dotfiles-provided utilities
if [ -d "${HOME}/.dotfiles/bin" ]; then
    export PATH="${HOME}/.dotfiles/bin:${PATH}"
fi

# Default VSCode directories on a Mac
if [ -d "/Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/bin" ]; then
    export PATH="$PATH:/Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/bin"
fi
if [ -d "/Applications/Visual Studio Code.app/Contents/Resources/app/bin" ]; then
    export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
fi

export PROMPT_EOL_MARK=""

export LESS="-FRX"

if [ -f "${HOME}/.zsh_completion" ]; then
    . "${HOME}/.zsh_completion"
fi

if [ -f "${HOME}/.zshrc_functions" ]; then
    . "${HOME}/.zshrc_functions"
fi

# Set up Direnv
if command -v direnv &> /dev/null; then
    eval "$(direnv hook zsh)"
fi

if command -v thefuck &> /dev/null; then
    eval "$(thefuck --alias)"
fi

if command -v pyenv &> /dev/null; then
    # Pyenv init
    export PYENV_ROOT="${HOME}/.pyenv"
    export PATH="${PYENV_ROOT}/bin:${PATH}"
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    plugins+=(pyenv)
fi

alias yubikey-force-gpg='gpg-connect-agent "scd serialno" "learn --force" /bye'

export GPG_TTY=$(tty)
